package effectivejava.chapter11.item79;

// 避免过度同步，可能导致性能下降、死锁甚至不确定行为
// 在同步区域内，不要调用一个设计为被覆盖的方法（不要从同步区域内调用外来方法）
// 作为规则，你应该在同步区域内做尽可能少的工作。 获取锁，检查共享数据，根据需要进行转换，然后删除锁。如果你必须执行一些耗时的活动，请设法将其移出同步区域
public class Main {
}
